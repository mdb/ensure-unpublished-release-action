---
name: build-and-test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
      - run: npm install
      - run: npm run all
      - name: Compare expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build:"
            git diff
            exit 1
          fi

  ensure-unpublished-version:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v5
        if: github.event_name != 'pull_request'
      - uses: actions/checkout@v5
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get head commit author
        id: author
        run: |
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
          echo "commit_author=$COMMIT_AUTHOR" >> $GITHUB_OUTPUT
      - name: Show author
        run: echo "${{ steps.author.outputs.commit_author }}"
      - name: Get package.json version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
      - uses: ./
        with:
          tag: ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          skip-authors: 'dependabot[bot]'
          author: ${{ steps.author.outputs.commit_author }}

  release:
    if: github.ref == 'refs/heads/main' && ${{ github.event.head_commit.author.name }} != 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs: ensure-unpublished-version
    steps:
      - uses: actions/checkout@v5
      - name: Release
        run: gh release create "$(jq -r .version package.json)" --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
